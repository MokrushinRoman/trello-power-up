from flask import Flask, request, jsonify
from utils.helpers import get_trello_id
from services.trello_service import trello_request

app = Flask(__name__)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π
def handle_trello_action(action_data):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫."""
    action = action_data.get("action", "").lower()

    if action == "create_card":
        board_name = action_data.get("board_name", "").lower()
        list_name = action_data.get("list_name", "").lower()
        card_name = action_data.get("card_name")
        card_desc = action_data.get("card_desc", "")

        if not board_name or not list_name or not card_name:
            missing_params = []
            if not board_name:
                missing_params.append("'board_name'")
            if not list_name:
                missing_params.append("'list_name'")
            if not card_name:
                missing_params.append("'card_name'")
            return {"error": f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {', '.join(missing_params)}."}

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–æ—Å–∫–∏
        board_id = get_trello_id("members/me/boards", board_name)
        if not board_id:
            return {"error": f"–î–æ—Å–∫–∞ '{board_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}

        # –ü–æ–ª—É—á–∞–µ–º ID —Å–ø–∏—Å–∫–∞
        list_id = get_trello_id(f"boards/{board_id}/lists", list_name)
        if not list_id:
            return {"error": f"–°–ø–∏—Å–æ–∫ '{list_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ –¥–æ—Å–∫–µ '{board_name}'"}

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        card = trello_request("POST", "cards", params={
            'idList': list_id,
            'name': card_name,
            'desc': card_desc
        })
        if card:
            return {"status": "success", "message": f"–ö–∞—Ä—Ç–æ—á–∫–∞ '{card_name}' —Å–æ–∑–¥–∞–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ '{list_name}'!"}
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"}

    elif action == "update_card":
        card_name = action_data.get("card_name")
        board_name = action_data.get("board_name", "").lower()
        new_name = action_data.get("new_name")

        if not card_name or not board_name or not new_name:
            return {"error": "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã 'card_name', 'board_name' –∏ 'new_name' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è 'update_card'."}

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–æ—Å–∫–∏
        board_id = get_trello_id("members/me/boards", board_name)
        if not board_id:
            return {"error": f"–î–æ—Å–∫–∞ '{board_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}

        # –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–∫–∏
        cards = trello_request("GET", f"boards/{board_id}/cards")
        card_id = next((c['id'] for c in cards if c['name'] == card_name), None)
        if not card_id:
            return {"error": f"–ö–∞—Ä—Ç–æ—á–∫–∞ '{card_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –¥–æ—Å–∫–µ '{board_name}'"}

        # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        updated_card = trello_request("PUT", f"cards/{card_id}", params={"name": new_name})
        if updated_card:
            return {"status": "success", "message": f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ '{card_name}' –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ '{new_name}'."}
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏"}

    elif action == "update_card_desc":
        card_name = action_data.get("card_name")
        board_name = action_data.get("board_name", "").lower()
        new_desc = action_data.get("new_desc", "")

        if not card_name or not board_name:
            return {"error": "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã 'card_name' –∏ 'board_name' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è 'update_card_desc'."}

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–æ—Å–∫–∏
        board_id = get_trello_id("members/me/boards", board_name)
        if not board_id:
            return {"error": f"–î–æ—Å–∫–∞ '{board_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}

        # –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–∫–∏
        cards = trello_request("GET", f"boards/{board_id}/cards")
        card_id = next((c['id'] for c in cards if c['name'] == card_name), None)
        if not card_id:
            return {"error": f"–ö–∞—Ä—Ç–æ—á–∫–∞ '{card_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –¥–æ—Å–∫–µ '{board_name}'"}

        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        updated_card = trello_request("PUT", f"cards/{card_id}", params={"desc": new_desc})
        if updated_card:
            return {"status": "success", "message": f"–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ '{card_name}' –æ–±–Ω–æ–≤–ª–µ–Ω–æ."}
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏"}

    elif action == "delete_card":
        card_name = action_data.get("card_name")
        board_name = action_data.get("board_name", "").lower()

        if not card_name or not board_name:
            return {"error": "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã 'card_name' –∏ 'board_name' –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è 'delete_card'."}

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–æ—Å–∫–∏
        board_id = get_trello_id("members/me/boards", board_name)
        if not board_id:
            return {"error": f"–î–æ—Å–∫–∞ '{board_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}

        # –ü–æ–∏—Å–∫ –∫–∞—Ä—Ç–æ—á–∫–∏
        cards = trello_request("GET", f"boards/{board_id}/cards")
        card_id = next((c['id'] for c in cards if c['name'] == card_name), None)
        if not card_id:
            return {"error": f"–ö–∞—Ä—Ç–æ—á–∫–∞ '{card_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –¥–æ—Å–∫–µ '{board_name}'"}

        # –£–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
        deleted_card = trello_request("DELETE", f"cards/{card_id}")
        if deleted_card:
            return {"status": "success", "message": f"–ö–∞—Ä—Ç–æ—á–∫–∞ '{card_name}' —É–¥–∞–ª–µ–Ω–∞."}
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"}

    return {"error": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ"}

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–æ–≤
@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.json
    if not data:
        return jsonify({"error": "–î–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã"}), 400

    result = handle_trello_action(data)
    return jsonify(result)

# –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç
@app.route("/", methods=["GET"])
def home():
    return "Flask —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ", 200

if __name__ == "__main__":
    app.run(port=5000)
